<?xml version="1.0" encoding="UTF-8"?>
<!-- please pay attention that: file name should not be logback.xml，name it logback-spring.xml to use it in springboot framework -->
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为 WARN，则低于 WARN 的信息都不会输出 -->
<!-- scan：当此属性设置为 true 时，配置文件如果发生改变，将会被重新加载，默认值为 true -->
<!-- scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当 scan 为 true 时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug：当此属性设置为 true 时，将打印出 logback 内部日志信息，实时查看 logback 运行状态。默认值为 false。 -->
<configuration scan="true" scanPeriod="10 seconds" debug="false">
    <springProperty scope="context" name="logging.path" source="logging.path"/>
    <springProperty scope="context" name="spring.application.name" source="spring.application.name"/>

    <!-- Log formatted output -->
    <property name="MDC_FILE_PATTERN"
              value="%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'} %-5level ${PID:-} [%thread] [%X{SOFA-TraceId},%X{SOFA-SpanId}] %logger{50} [%method,%line] - %msg%n"/>
    <property name="MDC_CONSOLE_PATTERN"
              value="%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'} %highlight(%-5level) ${PID:-} [%magenta(%20.20thread)] [%X{SOFA-TraceId},%X{SOFA-SpanId}] %yellow(%logger{50}) [%cyan(%method,%line)] - %msg%n"/>

    <!-- console output -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${MDC_CONSOLE_PATTERN}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- to generate logfile daily -->
    <appender name="ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <!-- a filter that show green light for object that has a error log level-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- filter level -->
            <level>ERROR</level>
            <!-- match operation: ACCEPT -->
            <onMatch>ACCEPT</onMatch>
            <!-- mismatch operation: DENY -->
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- log name -->
        <file>${logging.path}/${spring.application.name}/common-error.log</file>
        <!-- to generate a log file everyday with a longest lasting of 30 days -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- logfile name with daily rolling -->
            <FileNamePattern>${logging.path}/${spring.application.name}/common-error.log.%d{yyyy-MM-dd}
            </FileNamePattern>
            <!-- limit the total size of your 30-day history to 3GB -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- output format：%d is for date，%thread is for thread name，%-5level：loglevel with 5 character  %msg：log message，%n line breaker -->
            <pattern>${MDC_FILE_PATTERN}</pattern>
            <!-- encoding -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="ROOT-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- filter level -->
            <level>INFO</level>
            <!-- match operation: ACCEPT -->
            <onMatch>ACCEPT</onMatch>
            <!-- mismatch operation: DENY -->
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${logging.path}/${spring.application.name}/common-default.log</file>
        <!-- to generate a log file everyday with a longest lasting of 30 days -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- logfile name with daily rolling-->
            <FileNamePattern>${logging.path}/${spring.application.name}/common-default.log.%d{yyyy-MM-dd}
            </FileNamePattern>
            <!-- limit the total size of your 30-day history to 3GB -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- output format：%d is for date，%thread is for thread name，%-5level：loglevel with 5 character  %msg：log message，%n line breaker -->
            <pattern>${MDC_FILE_PATTERN}</pattern>
            <!-- encoding -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- SOFATracer MDC -->
    <appender name="MDC-EXAMPLE-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- filter level -->
            <level>INFO</level>
        </filter>
        <file>${logging.path}/${spring.application.name}/mdc-example.log</file>
        <!-- to generate a log file everyday with a longest lasting of 30 days -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- logfile name with daily rolling-->
            <FileNamePattern>${logging.path}/${spring.application.name}/mdc-example.log.%d{yyyy-MM-dd}</FileNamePattern>
            <!-- limit the total size of your 30-day history to 3GB -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- output format：%d is for date，%thread is for thread name，%-5level：loglevel with 5 character  %msg：log message，%n line breaker -->
            <pattern>${MDC_FILE_PATTERN}</pattern>
            <!-- encoding -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 设置 Spring & Hibernate 日志输出级别 -->
    <logger name="org.springframework" level="WARN"/>
    <logger name="org.mybatis" level="WARN"/>
    <logger name="com.ibatis" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <logger name="com.ruidou.baoqian.mapper" level="DEBUG"/>
    <!-- TODO：name 改成自己的项目的包路径 -->
    <logger name="com.sofaboot.quickstart.controller" level="DEBUG"/>

    <logger name="com.sofaboot.quickstart" level="INFO" additivity="false">
        <appender-ref ref="ROOT-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </logger>

    <logger name="MDC-EXAMPLE" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="MDC-EXAMPLE-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ROOT-APPENDER"/>
        <appender-ref ref="ERROR-APPENDER"/>
    </root>

</configuration>